/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as SearchImport } from "./routes/search";
import { Route as NewsImport } from "./routes/news";
import { Route as GalleryImport } from "./routes/gallery";
import { Route as ContactsImport } from "./routes/contacts";
import { Route as CategoryImport } from "./routes/category";
import { Route as AboutImport } from "./routes/about";
import { Route as IndexImport } from "./routes/index";
import { Route as InsideInsideImport } from "./routes/inside/$inside";

// Create/Update Routes

const SearchRoute = SearchImport.update({
	path: "/search",
	getParentRoute: () => rootRoute,
} as any);

const NewsRoute = NewsImport.update({
	path: "/news",
	getParentRoute: () => rootRoute,
} as any);

const GalleryRoute = GalleryImport.update({
	path: "/gallery",
	getParentRoute: () => rootRoute,
} as any);

const ContactsRoute = ContactsImport.update({
	path: "/contacts",
	getParentRoute: () => rootRoute,
} as any);

const CategoryRoute = CategoryImport.update({
	path: "/category",
	getParentRoute: () => rootRoute,
} as any);

const AboutRoute = AboutImport.update({
	path: "/about",
	getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
	path: "/",
	getParentRoute: () => rootRoute,
} as any);

const InsideInsideRoute = InsideInsideImport.update({
	path: "/inside/$inside",
	getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
	interface FileRoutesByPath {
		"/": {
			id: "/";
			path: "/";
			fullPath: "/";
			preLoaderRoute: typeof IndexImport;
			parentRoute: typeof rootRoute;
		};
		"/about": {
			id: "/about";
			path: "/about";
			fullPath: "/about";
			preLoaderRoute: typeof AboutImport;
			parentRoute: typeof rootRoute;
		};
		"/category": {
			id: "/category";
			path: "/category";
			fullPath: "/category";
			preLoaderRoute: typeof CategoryImport;
			parentRoute: typeof rootRoute;
		};
		"/contacts": {
			id: "/contacts";
			path: "/contacts";
			fullPath: "/contacts";
			preLoaderRoute: typeof ContactsImport;
			parentRoute: typeof rootRoute;
		};
		"/gallery": {
			id: "/gallery";
			path: "/gallery";
			fullPath: "/gallery";
			preLoaderRoute: typeof GalleryImport;
			parentRoute: typeof rootRoute;
		};
		"/news": {
			id: "/news";
			path: "/news";
			fullPath: "/news";
			preLoaderRoute: typeof NewsImport;
			parentRoute: typeof rootRoute;
		};
		"/search": {
			id: "/search";
			path: "/search";
			fullPath: "/search";
			preLoaderRoute: typeof SearchImport;
			parentRoute: typeof rootRoute;
		};
		"/inside/$inside": {
			id: "/inside/$inside";
			path: "/inside/$inside";
			fullPath: "/inside/$inside";
			preLoaderRoute: typeof InsideInsideImport;
			parentRoute: typeof rootRoute;
		};
	}
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
	IndexRoute,
	AboutRoute,
	CategoryRoute,
	ContactsRoute,
	GalleryRoute,
	NewsRoute,
	SearchRoute,
	InsideInsideRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/category",
        "/contacts",
        "/gallery",
        "/news",
        "/search",
        "/inside/$inside"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/category": {
      "filePath": "category.tsx"
    },
    "/contacts": {
      "filePath": "contacts.tsx"
    },
    "/gallery": {
      "filePath": "gallery.tsx"
    },
    "/news": {
      "filePath": "news.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/inside/$inside": {
      "filePath": "inside/$inside.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
